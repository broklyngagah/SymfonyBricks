{% import 'BricksSiteBundle::macros/macrosBootstrapForms.html.twig' as macrosBootstrapForms %}

{# button to open the modal to send a message. if uer is not logged, ask the login#}
{% if is_granted('IS_AUTHENTICATED_FULLY') %}
    <button id="button-form-message-ajax-send-from-brick" type="button" data-toggle="modal" data-target="#modal-form-message-ajax-send-from-brick" class="btn btn-mini">
        <i class="icon-envelope"></i> {{ 'fos_message_bundle.send_from_brick'|trans({}, 'FOSMessageBundle')|capitalize }}
    </button>

    <div id="modal-form-message-ajax-send-from-brick" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="modal-form-message-ajax-send-from-brick-label" aria-hidden="true">
        <form id="form-message-ajax-send-from-brick" action="{{ path('message_ajax_send_from_brick') }}" method="POST" onsubmit="return messageAjaxSendFromBrick();" class="form form-horizontal" novalidate>

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                <h3 id="modal-login-label">
                    {{ 'fos_message_bundle.send_new'|trans({}, 'FOSMessageBundle')|capitalize }}
                </h3>
            </div>
            <div class="modal-body">

                <div class="control-group ">
                    <div class="controls">
                        <div id="ajax-messages"></div>
                    </div>
                </div>

                <div class="control-group ">
                    <label class="control-label">
                        {{ 'fos_message_bundle.form.recipient.label'|trans({}, 'FOSMessageBundle') }}
                    </label>
                    <div class="controls">
                        {{ form.recipient.vars.value }}
                    </div>
                </div>

                {{ macrosBootstrapForms.controlGroup(form.body, {
                    label: 'fos_message_bundle.form.body.label'|trans({}, 'FOSMessageBundle')
                }) }}

                {{ form_widget(form.recipient, {'attr': {'style': 'display:none'}}) }}
                {{ form_widget(form.brick, {'attr': {'style': 'display:none'}}) }}

                {{ form_rest(form) }}
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">
                    <i class="icon-ok"></i> {{ 'fos_message_bundle.send'|trans({}, 'FOSMessageBundle') }}
                </button>
            </div>

        </form>
    </div>

    <script>
        function messageAjaxSendFromBrick() {
            var form = $('#form-message-ajax-send-from-brick');

            // form submit button
            var buttonSubmit = form.find('button[type="submit"]');
            buttonSubmit.originalHtml = buttonSubmit.html();

            // ajax messages container
            var ajaxMessagesContainer = form.find('#ajax-messages');

            $.ajax({
                type: 'POST',
                url: form.attr('action'),
                data: form.serialize(),
                dataType: 'json',

                beforeSend: function() {

                    // change button state
                    buttonSubmit.attr("disabled", "disabled");
                    buttonSubmit.html('<img src="/img/ajax-loader-snake.gif" />');

                    // restore empty content
                    ajaxMessagesContainer.html('');
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    var json= jQuery.parseJSON(jqXHR.responseText);

                    if (json.errors != undefined) {

                        var errors = json.errors;
                        for (var error in errors) {
                            var arrayErrors = errors[error];
                            for (var i = 0; i < arrayErrors.length; i++) {
                                ajaxMessagesContainer.append(
                                    $('<p class="error" />').html(arrayErrors[i])
                                );
                            }
                        }
                    } else {
                        ajaxMessagesContainer.append(
                            $('<p class="error" />').html('Errors occurred')
                        );
                    }
                },
                success: function(data, textStatus, jqXHR) {
                    ajaxMessagesContainer.html(
                        $('<p class="success" />').append(
                            '{{ 'fos_message_bundle.sent_confirmation'|trans({}, 'FOSMessageBundle') }}',
                            $('<p class="actions" />').append(
                                '<a href="javascript:void(0);" data-dismiss="modal" aria-hidden="true">{{ 'close'|trans }}</a>',
                                ' | ',
                                '<a href="{{ path('fos_message_sent') }}">{{ 'fos_message_bundle.go_to_sent'|trans({}, 'FOSMessageBundle')|lower }}</<a>'
                            )
                        )
                    );
                },
                complete: function() {
                    // restore button state
                    buttonSubmit.html(buttonSubmit.originalHtml);
                    buttonSubmit.removeAttr("disabled");

                    form.find('#{{ form.body.vars.id }}').val('');
                }
            });

            return false;
        };

    </script>
{% else %}
    <a href="#modal-login" id="button-form-message-ajax-send-from-brick" class="btn btn-mini" data-toggle="modal">
        <i class="icon-envelope"></i> {{ 'fos_message_bundle.send_from_brick'|trans({}, 'FOSMessageBundle')|capitalize }}
    </a>
{% endif %}
