/* import bootstrap variables */
@import "../../../../../web/assets/bootstrap/less/variables.less";
/* import bootstrap mixins */
@import "../../../../../web/assets/bootstrap/less/mixins.less";

/******************************************************************************************
CONTROLLER-BRICK.LESS

rules for all the templates loaded through Bricks\SiteBundle\BrickController
******************************************************************************************/

/**
    show a brick
    
    route: brick_show
*/
body.route-brick_show {
    .description {
        font-size: 14px;
        padding-bottom: 40px;
    }
    
    #info {
        top:  0px;

        .border-radius(4px);
        #gradient > .vertical(#F1F1F1, #E0E0E0);

        .view-on-scroll { visibility: hidden; }

        .actions { padding: 0px 10px 10px 10px;
            a { font-weight: normal; }
        }

        &.affix { .view-on-scroll { visibility: visible; } }

        .row {
            [class^="span"] {
                padding: 10px;
            }

            #social-share {
                float:  right;
            }
            #button-form-message-ajax-send-from-brick {
                float: right; clear: both;
                margin-top: 5px;
            }
        }
    }

    .content {
        h1 { font-size:  20px; }
        
        ul { margin: 0 0 10px 25px;
            li { list-style-type: disc; }
        }
    }
}

/**
    search bricks
    
    route: brick_search
*/
body.route-brick_search {
    #form-search { overflow:   hidden;
        .box {
            float:  left;
            margin-right:   10px;
            
            &.buttons { float: right; }
        }
    }
    
    ul.bricks-list {
        p.brick-info { padding-left: 20px; }
        li {
            margin-bottom:  10px;
            border-bottom:  1px solid #CCC;
        }
    }
}

/**
    <p> element containing info about a brick. eg: user, last update, tags, etc..
*/
p.brick-info {
    &, a {
        font-size:  13px;
        font-weight:    normal;
    }
}

/**
    toggle-user-stars-brick element
    
    rules for the toggleUserStarsBrick element to toggle "Starred" state for a brick
*/
.toggle-user-stars-brick {
    color:  #A2A2A2;
    font-weight:  normal;
    
    &:hover { text-decoration: none;
        i { color: #DBCD24; }
    }
    
    &.active {
        color:  inherit;
        i { color: #DBCD24; }
    }
}
